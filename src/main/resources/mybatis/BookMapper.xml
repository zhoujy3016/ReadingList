<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="readingList.mapper.BookMapper">
	<!-- 开启二级缓存 -->
  	<cache eviction="FIFO" flushInterval="60000" size="512" readOnly="false"/>
 	
    <resultMap type="readingList.domain.Book" id="bookMap">
        <id column="id" property="id" />
        <result column="reader" property="reader" />
        <result column="isbn" property="isbn" />
        <result column="title" property="title" />
        <result column="description" property="description" />
        <result column="author" property="author" />
        <result column="publish_id" property="publish_id" />
        <result column="publish_name" property="publish_name"/>
        <result column="creater" property="creater"/>
    </resultMap>
    
   
    <resultMap type="readingList.domain.Book" id="bookMapAssociation" extends="bookMap">
    <!-- fetchType 覆盖全局加载方式 -->
        <association property="publish" javaType="readingList.domain.Publish" 
        	select="readingList.mapper.PublishMapper.findPublishById" column="publish_id">
            <result column="publish_id" property="publish_id" />
        	<result column="publish_name" property="publish_name"/>
        </association>
    </resultMap>


<!-- resultType实现	
	<select id="findBookInfomation" resultType="readingList.domain.Book">
	    select b.*, 
	    p.publish_id "publish.publish_id" ,
	    p.publish_name "publish.publish_name" 
	    
	    from book b
        left join publish p on p.publish_id = b.publish_id
        <where>
	         <if test="author!= null and author!= ''">
	         	<bind name="authorLike" value="'%'+ author +'%'"/>
				and b.author like #{authorLike}
			</if>
			<if test="title != null and title != ''">
				<bind name="titleLike" value="'%'+ title +'%'"/>
				and b.title like #{titleLike}
			</if>
		</where>
	</select>
 -->

     <select id="findBookInfomation" resultMap="bookMap" parameterType="Map">
        select b.*, p.publish_id ,p.publish_name from book b
        left join publish p on p.publish_id = b.publish_id
        <where>
	         <if test="params.author != null and params.author !=''">
	         	<!-- 使用bind防止sql注入 -->
	         	<bind name="authorLike" value="'%'+ params.author +'%'"/>
				and b.author like #{authorLike}
			</if>
			<if test="params.title != null and params.title != ''">
				<bind name="titleLike" value="'%'+ params.title +'%'"/>
				and b.title like #{titleLike}
			</if>
			<if test="params.conditions != null and params.conditions !=''">
				and ${params.conditions}
			</if>
		</where>
    </select>
    
    
    <select id="findBookInfomationLazy" resultMap="bookMapAssociation">
        select b.* from book b
        
        <where>
	         <if test="author!= null and author!= ''">
	         <bind name="authorLike" value="'%'+ author +'%'"/>
				and b.author like #{authorLike}
			</if>
			<if test="title != null and title != ''">
			<bind name="titleLike" value="'%'+ title +'%'"/>
				and b.title like #{titleLike}
				<!-- and b.title like '%${title}%' -->
			</if>
		</where>
    </select>
    
    <insert id="saveBook" parameterType="readingList.domain.Book">
    	insert into book(reader, isbn, title, author, description, publish_id, creater)
    		values(#{reader}, #{isbn}, #{title}, #{author}, #{description}, #{publish_id}, #{creater})
    </insert>
    
    <delete id="deleteById" parameterType="java.lang.Long">
    	delete from book where id= #{id}
    </delete>
    
    
</mapper>